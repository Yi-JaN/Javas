import java.util.Scanner;

public class Main {

    public static void main(String[] args) {  //假設我設4個LED值是"9453"   補充:substring是取字串參數,然後第幾個字串值
        Scanner scn=new Scanner(System.in);
        String str=scn.nextLine();   //字串先輸入9453
        int []data=new int[4];    //輸入[]data 因為是4個LED值,所以new int[4]個值
        for(int i=0;i<4;i++){      //用迴圈取我字串裡的4個值,並且1個1個值取
            data[i]=Integer.parseInt(str.substring(i,i+1)); //str借值字串轉int 字串第1個值是(0,1) 第2個值是(1,2) 第3個值是(2,3)
        }                                                   //第4個值是(3,4), 都取完後我的data[i]={9,4,5,3};
        String [][]data2={{"*****",   //列印LED 0~9,每個都需要列,而每個0~9數字的高都是5個,那因為data2是String的二維陣列,所以陣列
                           "*   *",   //開頭需要是0,所以每個數字5個高,分別是第1高為0,第2高為1,第3高為2,第4高為3,第5高為4
                           "*   *",   //然後0字形在陣列裡是0 1字形為1 2為2 3為3 4為4 5為5 6為6 7為7 8為8 9字形在陣列裡為9
                           "*   *",   //字形就是所謂的->[字形][每個字形裡數字的高(=待會的i)]
                           "*****",},  //              高        值
                          {"    *",
                           "    *",
                           "    *",
                           "    *",
                           "    *",},
                          {"*****",
                           "    *",
                           "*****",
                           "*    ",
                           "*****",},
                          {"*****",
                           "    *",
                           "*****",
                           "    *",
                           "*****",},
                          {"*   *",
                           "*   *",
                           "*****",
                           "    *",
                           "    *",},
                          {"*****",
                           "*    ",
                           "*****",
                           "    *",
                           "*****",},
                          {"*    ",
                           "*    ",
                           "*****",
                           "*   *",
                           "*****",},
                          {"*****",
                           "    *",
                           "    *",
                           "    *",
                           "    *",},
                          {"*****",
                           "*   *",
                           "*****",
                           "*   *",
                           "*****",},
                          {"*****",
                           "*   *",
                           "*****",
                           "    *",
                           "*****",}};
        //以下是把i的5個高在每個值慢慢產生出來!目前的i(高)列印OK之後,再換下個高(i)列印 以此類推
        for(int i=0;i<5;i++){  //i是我的data2 0~9的高
            for(int j=0;j<4;j++){  //j是我的data 取4個正整數的值 補充:j<4這邊也可變成->data.length 因為一樣這行是在取data陣列值
                System.out.print(data2[data[j]][i]+" ");//這行意思就是把我data[j]裡的值1個1個列出來,然後用data2[][]去找,然後
            }      //data[j]出現的值放高 [i]的高值放在data2的值 ->data2[data[j]] <-高  [i] <-值 -> data2[data[j]][i]
            System.out.println();             //進而再去data2搜尋陣列
        }
    }
}
/*
補充print(data2[data[j]][i]+" ")意思, 意思是我的data[j]值包在data2裡面,那麼假設我的data[j(2)]->5 ,那麼data2[5][i],假設i是1,就變成
data2[5][1],就去data2找高是5值是1的值 ->把"*    "取過來列印
題目: 矩陣數字顯示
A:(1.)9453
   A:***** *   * ***** ***** <-每個值都先列高,這是第1行的高
     *   * *   * *         * <-每個值第1行的高OK之後,再來ln換每個值第2行的高
     ***** ***** ***** ***** <-每個值第2行的高OK之後,再來ln換每個值第3行的高
         *     *     *     * <-每個值第3行的高OK之後,再來ln換每個值第4行的高
     *****     * ***** ***** <-每個值第4行的高OK之後,再來ln換每個值第5行的高
     
一開始取4個值的方式也可以這樣 如下(方法二):
    int n=scn.nextInt();    //先輸入一個題目說的4個正整數的4個值 假設我設0457,但是正整數開頭不能為0 所以變為457
    int[]data=new int[4];  //之後用1維陣列取4個值進去
    for(int i=4-1;i>=0;i--){  //每循環1次 就-1,陣列開頭必為0 4-1>=0 共循環4次
      data[i]=n%10;    //目前i值位於的地方取一個n%10給他
      n=n/10;        //之後再把n值除以10,之後以此類推
    }
 示意圖  0457 ->      data[i=3]        data[i=2]      data[i=1]      data[i=0]
    n=0457->457    457%10->i=3得7   45%10->i=2得5    4%10->i=1得4    0%10->i=0得0      data一維陣列得出結果 i=0->0  i=1->4
                   457/10=45        45/10=4         4/10=0          0/10=0                             i=2->5  i=3->7
                                                                                     data[]->{0,4,5,7}
 */
