import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scn=new Scanner(System.in);
       int n=scn.nextInt();                 //我設一個n正整數
       Fibonacii(n);                        //丟到名為Finbonacii(n)
       System.out.println(Fibonacii(n));
    }
    public static int Fibonacii(int F){
        if(F==0){                           //這遞迴函數裡if迴圈是費式數列公式  第0項=0 第1項=1 第n項=第n-1項+第n-2項
            return F;
        }else if(F==1){
            return F;
        }else {
            return Fibonacii(F-1)+Fibonacii(F-2);
        }
    }
}
/*
題目:遞迴函數 費式數列
題目描述請去模組三參考題庫題目去看
公式 第0項=0
    第1項=1
    第n項=第n-1項+第n-2項
假設n設7=(6+5)
   n=(5+4)+(4+3)
   n=(4+3)+(3+2)+(3+2)+(2+1)
   n=(3+2)+(2+1)+(2+1)+(1+0)+(2+1)+(1+0)+(1+0)+(1)
   n=(2+1)+(1+0)+(1+0)+(1)+(1+0)+(1)+(1)+(0)+(1+0)+(1)+(1)+(0)+(1)+(0)+(1)
   n=(1+0)+(1)+(1)+(0)+(1)+(0)+(1)+(1)+(0)+(1)+(1)+(0)+(1)+(0)+(1)+(1)+(0)+(1)+(0)+(1)
   n=1+1+1+1+1+1+1+1+1+1+1+1+1="13"
敘述:以n設7來說 我設的正整數的值如果不是F==0 跟F==1 就是丟到else裡做公式算法 所以一開始我的7把他列F-1與F-2->得6與5,所以6+5,之後以此類推一樣如果
    6跟5分別不能帶進F==0跟F==1那就繼續丟到else裡做公式算法 所以6跟5 先從6開始F-1與F-2->得5+4(5與4),之後換5開始F-1與F-2 ->得4+3(4與3)以此類推
    動作,之後做到後面如果假設分解到1與0 ,那就是符合if(F==0){跟elseif(F==1){這行,所以就放一模一樣的值,下次運算解讀再碰到1與0,就不用管他們直
    接再放if(F==0){跟elseif(F==1){再放一模一樣的值,以此類推反正就照公式跑! ""算到後面一整行如果不是1就是0就可以直接全部把值加起來""!加起來
    之後就可以給"n"了,然後就在上方列印n
 A:(1.)7
     A:13
 */
