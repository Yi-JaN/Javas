import java.util.Scanner;

public class Main {

    public static void main(String[] args) {   //此題用高4值3去做
        Scanner scn=new Scanner(System.in);
        int m=scn.nextInt();  //設高=4
        int n=scn.nextInt();  //設值=3
        int [][]arr=new int[m][n];  //讓arr有高4值3的空間,意思是每一行高有3值,然後高4值3
        for(int i=0;i<m;i++){    //外圈for是拿來當高
            for(int j=0;j<n;j++){  //內圈for拿來當取值
                arr[i][j]=scn.nextInt();  //經過迴圈循環,arr取我目前所輸入的正整數值,arr是二維陣列,他會自己分割"高"出來
            }                             //整個迴圈循環OK之後,目前arr[][]是像我題目那樣高4值3的陣列排序值
        }               //然後答案是高4值3變成高3值4,並且用"反向側翼"的方式去取arr正整數的陣列排序值
        for(int i=n-1;i>=0;i--){  //一樣這邊高3值4,所以n當高,那為什麼會-1? 因為每個陣列開頭一定第一個值都是要"0",所以不管哪個高都一定要0
            for(int j=0;j<m;j++){ //一樣這裡先當作取值 所以高3值4,m先當值
                System.out.printf(arr[j][i]+"\t");//重點是這行,arr[][]已經有陣列排序值了,所以這裡把n變成值,m變成高,像這樣arr[j][i],
            }    //用arr[j][i]的取法去取我arr裡面的正整數值,然後這種取法方式也是所謂的側翼取法,那因為是用反向側翼取法,所以這邊才會i=n-1
            System.out.println();   //每列一行就換行字元,繼續下一行動作,然後由上至下繼續做下一行的"反向側翼"取法
        }
    }
}
/*
題目:陣列行列互換(反向側翼取法)
補充:"側翼取法"是像1 2 3 8這裡當開頭,而反向側翼取法是像7 8 9 0這裡當開頭,然後再慢慢往前反向取側翼
補充: 陣列開頭第一個值一定要"0" ,包括算高的,算高的開頭也是要為"0"
補充:側翼意思是以我題目來說1 2 3 8這個就是陣列側翼,再來就是4 5 6 8,再來就是7 8 9 0
    反向側翼以我題目來說從7 8 9 0開始,再來就是4 5 6 8,再來就是取1 2 3 8
1 4 7
2 5 8
3 6 9
8 8 0

(上方為題目 下方為答案)
A:                               j  i        j  i       j  i       j  i
7 8 9 0                     (7)  0  2   (8)  1  2  (9)  2  2  (0)  3  2
4 5 6 8                     (4)  0  1   (5)  1  1  (6)  2  1  (8)  3  1
1 2 3 8                     (1)  0  0   (2)  1  0  (3)  2  0  (8)  3  0

 */
