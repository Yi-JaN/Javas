import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scn=new Scanner(System.in);
        int n=scn.nextInt();
        f(n);
        System.out.println(f(n));
    }
    public static int f(int nn){
        if(nn==1){                 //分解到nn==1時就代表丟進去+1在return就OK了,之後這個值就不必再丟遞迴函數裡,以此類推
            return nn+1;           //<-return沒有用"f"名稱試值!
        }else {
            return f(nn-1)+f(nn/2); //f(nn/2)這邊也可以改成f((int)Math.floor(nn/2))->意思就是說我用Math.floor先把nn的值/2,
        }                           //除以2(/2)取到的正整數值用floor,不4捨五入,然後之後轉int值,該分解正整數值就可以回傳了
    }                               
}
/*
題目:遞迴程式練習
題目說明請到模組三參考題目去看
5=4+2
 =(3+2)+(1+1)
 =(2+1)(1+1)+1+1
 =(1+1)+1+1+1+1+1        <-分解到這邊已經全部都是1了
 =1+1+1+1+1+1+1          <-之後把全部都是1的值最後丟進遞迴函數裡
 =(1+1)+(1+1)+(1+1)+(1+1)+(1+1)+(1+1)+(1+1)   <-丟進if(nn==1)這行,在+1並且return
 =14                                   <-之後全部+1的值都回來,就不用在丟進遞增函數,直接全部相加->A:"14"
程式說明:以5來說,"此程式是從你所輸入的正整數開始由大慢慢去分解變小而算的",當你正整數從5開始算,分解出來都是1時,就是慢慢分解到最小,"分解到最小時
再丟進if(nn==1)這行之後返回就不用再丟進遞增函數了",以題目來說nn=1時就是最小,所以算到1時丟進if(nn==1)在return後就不用在遞迴函數了,就可以直
接println(f(n))去列印分解出來的最終值全部相加總合!
補充:那因為nn==1是最小值,然後再if(nn==1){這行他return沒有用"f"這個名稱試值,所以就在nn==1最小部分,會返回時不在丟進遞迴函數裡!
A:(1.)5        (2.)10       (3.)12
    A:14         A:60         A:94
 */